name: Deploy to Server

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'

      - name: Upgrade SSH
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan 165.22.233.166 >> ~/.ssh/known_hosts    

      - name: Install SSH Agent
        run: |
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa   

      - name: Install Go on Server
        run: ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@165.22.233.166 "sudo apt update && sudo apt install -y golang"
        env:
          GOROOT: /opt/digitalocean/go/1.20.4/x64
          
      - name: Stop Service
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@example.com "pkill -f traffic-simulation"
        continue-on-error: true  

      - name: Build and Deploy
        run: |
          # Add your build and deployment commands here
          # Example: Assuming your project has a main.go file
          go build -o traffic-simulation
          # Copy the new binary
          scp -v -i ~/.ssh/id_rsa traffic-simulation ${{ secrets.USERNAME }}@165.22.233.166:${{ secrets.BACKEND_APP_DIRECTORY }}
          # Start the service on the remote server
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@165.22.233.166 "cd ${{ secrets.BACKEND_APP_DIRECTORY }} && nohup ./traffic-simulation > traffic-simulation.log 2>&1 & disown"

